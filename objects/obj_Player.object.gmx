<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>n = instance_number(obj_planet)

for(i = 0; i&lt;n; i++)
{
    planet[i] = instance_find(obj_planet, i);
    //show_debug_message(planet[i]);
}
stars = instance_number(obj_star);
colStars = 0;
pointer = false;
object_set_depth(obj_player_pointer, -10000);
tick = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mouse_check_button(mb_left))
{
    motion_add(point_direction(x, y, mouse_x, mouse_y), .07);
}
for(i = 0; i&lt;n; i++)
{
    px = planet[i].x;
    py = planet[i].y;
    dist = point_distance(x,y,px,py);
    mass = planet[i].mass;
    mtn = mass/dist/dist;
    dir = point_direction(x,y,px,py);
    motion_add(dir, mtn);
}
if(!pointer &amp;&amp;(x&gt;room_width || x&lt;0 || y&gt;room_height || y &lt; 0))
{
    instance_create(room_width/2, room_height/2, obj_player_pointer);
    pointer = true;
}
if(place_meeting(x,y,obj_planet)) room_restart();
if(colStars == stars &amp;&amp; room_next(room) != -1)
    {
        room_goto_next();
    }
if(keyboard_check_pressed(vk_space)) room_restart();
if(keyboard_check_pressed(vk_escape)) room_goto(rm_start);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>starsText = string(colStars) + " / " + string(stars);
draw_text_transformed_colour(10,10, starsText, 2, 2, 0, c_white, c_white, c_white, c_white, 255);
//draw_text(10,10, starsText);
tick = 0;
if(tick&gt;0)
{
    draw_circle(mouse_x, mouse_y, tick, false); 
}
else if(mouse_check_button(mb_left))
{
    tick = 15;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
